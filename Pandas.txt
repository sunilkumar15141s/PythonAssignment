Q1. How do you load a CSV file into a Pandas DataFrame?
Ans:- To load a CSV file into dataframe we use inbuilt function called read read_csv() from pandas module.
Ex:-import pandas as pd

df = pd.read_csv('data.csv')

Q2. How do you check the data type of a column in a Pandas DataFrame?
Ans:-To check the data type in pandas DataFrame we can use the “dtype” attribute.

Q3. How do you select rows from a Pandas DataFrame based on a condition?
Ans:- There are several ways to select rows from a dataframe like Loc, iloc,isin() etc.,
Ex:- new_df  = df.loc[df['salary']== 50000]

Q4. How do you rename columns in a Pandas DataFrame?
Ans:-One way of renaming the columns in a Pandas Dataframe is by using the rename() function
Ex:- sports_pd.rename(columns = {'age':'AGE'}, inplace = True)

Q5. How do you drop columns in a Pandas DataFrame?
Ans:-To Delete a column from a Pandas DataFrame or Drop one or more than one column from a DataFrame can be achieved in multiple ways. 
Ex:-df.drop(['Age'], axis=1)

Q6. How do you find the unique values in a column of a Pandas DataFrame?
Ans:-You can get unique values in column (multiple columns) from pandas DataFrame using unique()
Ex:-df.Name.unique()

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?
Ans:-df. isnull(). sum() will give the column-wise sum of missing values.

Q8. How do you fill missing values in a Pandas DataFrame with a specific value?
Ans:- The fillna() function iterates through your dataset and fills all empty rows with a specified value. This could be the mean, median, modal, or any other value.

Q9. How do you concatenate two Pandas DataFrames?
Ans:-To concatenate an arbitrary number of pandas objects ( DataFrame or Series ), use concat().
Ex:-
frames = [df1, df2, df3]

result = pd.concat(frames)

Q10. How do you merge two Pandas DataFrames on a specific column?
Ans:- To merge dataframes on a specific column we can use merge() function.
Ex:-
df1.merge(df2[['Name', 'Grade', 'Rank']])

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?
Ans:-Dataframe.aggregate() function is used to apply some aggregation across one or more column. Aggregate using callable, string, dict, or list of string/callables. 

Ex:-df.aggregate({"Number":['sum', 'min'],
              "Age":['max', 'min'],
              "Weight":['min', 'sum'], 
              "Salary":['sum']})
Q12. How do you pivot a Pandas DataFrame?
Ans:-The pivot() function is used to reshaped a given DataFrame organized by given index / column values. This function does not support data aggregation, multiple values will result in a MultiIndex in the columns
Syntax:-DataFrame.pivot(*, index=None, columns=None, values=None)

Q13. How do you change the data type of a column in a Pandas DataFrame?
Ans:-To change the datatype of DataFrame columns, use DataFrame.astype() method, DataFrame.infer_objects() method, or pd.to_numeric.

Q14. How do you sort a Pandas DataFrame by a specific column?
Ans:- To sort the DataFrame based on the values in a single column, you'll use . sort_values() . By default, this will return a new DataFrame sorted in ascending order. It does not modify the original DataFrame.

Q15. How do you create a copy of a Pandas DataFrame?
Ans:-The copy() method returns a copy of the DataFrame. By default, the copy is a "deep copy" meaning that any changes made in the original DataFrame will NOT be reflected in the copy.
Syntax:-dataframe.copy(deep)

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?
Ans:-Using Loc to Filter With Multiple Conditions
The loc function in pandas can be used to access groups of rows or columns by label. Add each condition you want to be included in the filtered result and concatenate them with the & operator

Ex:-# filter dataframe
display(dataFrame.loc[(dataFrame['Salary']>=100000) & (dataFrame['Age']< 40) & (dataFrame['JOB'].str.startswith('D')),
                    ['Name','JOB']])

Q17. How do you calculate the mean of a column in a Pandas DataFrame?
Ans:-To calculate the mean of whole columns in the DataFrame, use pandas. Series. mean() with a list of DataFrame columns. You can also get the mean for all numeric columns using DataFrame.

Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?
Ans:- Pandas dataframe.std() function return sample standard deviation over requested axis.
Ex:-df.std(axis = 0, skipna = True)

Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?
Ans:-By using corr() function we can get the correlation between two columns in the dataframe.
Syntax:-dataframe[‘first_column’].corr(dataframe[‘second_column’])

Q20. How do you select specific columns in a DataFrame using their labels?
Ans:-This is the most basic way to select a single column from a dataframe, just put the string name of the column in brackets
Ex:- df['name']

Q21. How do you select specific rows in a DataFrame using their indexes?
Ans:-If you'd like to select rows based on integer indexing, you can use the .iloc function.
Ex:- df.iloc[[4]]

Q22. How do you sort a DataFrame by a specific column?
Ans:-To sort the DataFrame based on the values in a single column, you'll use . sort_values() .
Ex:- df.sort_values("Mumbai")

Q23. How do you create a new column in a DataFrame based on the values of another column?
Ans:- Using apply() method
If you need to apply a method over an existing column in order to compute some values that will eventually be added as a new column in the existing DataFrame, then pandas. DataFrame. apply() method should do the trick.

Q24. How do you remove duplicates from a DataFrame?
Ans:- Pandas drop_duplicates() method helps in removing duplicates from the Pandas Dataframe In Python.

Q25. What is the difference between .loc and .iloc in Pandas?
Ans:-The main distinction between the two methods is:
loc gets rows (and/or columns) with particular labels.
iloc gets rows (and/or columns) at integer locations.