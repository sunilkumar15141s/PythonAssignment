
Q1. Why do we call Python as a general purpose and high-level programming language?
Ans:-Because they are not written in machine-readable language, Python programs need to be processed before machines can run them. Python is an interpreted language. This means that every time a program is run, its interpreter runs through the code and translates it into machine-readable byte code.

Q2. Why is Python called a dynamically typed language?
Ans:-It doesnâ€™t know about the type of the variable until the code is run. So declaration is of no use. What it does is, It stores that value at some memory location and then binds that variable name to that memory container. And makes the contents of the container accessible through that variable name. So the data type does not matter. As it will get to know the type of the value at run-time.

Q3. List some pros and cons of Python programming language?
Ans:-
Pros
---------------
1.Python is an interpreted language
2. python is easy to learn and read
3.Python enhances productivity
4.Python has a vast collection of libraries
5.Python is free, open-source, and has a vibrant community
6.Python is a portable programming language

cons
-----------
1.Python consumes a lot of memory space
2.Python can have runtime errors
3.Python has speed limitations


Q4. In what all domains can we use Python?
Ans:-
1. Data analytics and data visualization 
2.Machine learning / Artificial intelligence
3.Web Applications
4.Desktop GUI Applications
5.Mobile app development
6.Embedded systems

Q5. What are variable and how can we declare them?
Ans:- 
variable:-Variable is a name that is used to refer to memory location. Python variable is also known as an identifier and used to hold value.
Declaring Variables:-
------------------
Variable names can be a group of both the letters and digits, but they have to begin with a letter or an underscore.
It is recommended to use lowercase letters for the variable name. Rahul and rahul both are two different variables.
We don't need to declare explicitly variable in Python. When we assign any value to the variable, that variable is declared automatically.


Q6. How can we take an input from the user in Python?
Ans:-Python provides two built-in methods to read the data from the keyboard. These methods are given below.
1)input(prompt)
2)raw_input(prompt)
input():-The input function is used in all latest version of the Python. It takes the input from the user and then evaluates the expression. The Python interpreter automatically identifies the whether a user input a string, a number, or a list. 
Ex:-name = input("Enter your name: ")  
print(name):-
name = input("Enter your name: ")  
print(name)  
raw_input() - The raw_input function is used in Python's older version like Python 2.x. It takes the input from the keyboard and return as a string. The Python 2.x doesn't use much in the industry.

Q7. What is the default datatype of the value that has been taken as an input using input() function?
Ans:-By default, input returns a string.

Q8. What is type casting?
Ans:-Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users.

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Ans:-Yes
 Python provides the two methods that help us to take multiple values or input in one line.

Using split() method:-
The split() method is used to split the Python string, but we can use it to get the multiple values.
ex:-a, b, c = input("Enter three values: ").split()  
print("Enter Your First Name: ", a)  
print("Enter Your Last Name: ", b)  
print("Enter Your Class: ", c)  
print()  
Using List Comprehension:-
We can also take values and convert them into the list using the map() method along with the split() method. 
Ex:-
# Taking multiple inputs in a single line  
# and type casting using list() function  
x = list(map(int, input("Enter multiple values: ").split()))  
print("List of students: ", x)
 
Q10. What are keywords?
Ans:-Every scripting language has designated words or keywords, with particular definitions and usage guidelines. Python is no exception. The fundamental constituent elements of any Python program are Python keywords.

Q11. Can we use keywords as a variable? Support your answer with reason.
Ans:-We cannot use a keyword as a variable name, function name, or any other identifier. They are used to define the syntax and structure of the Python language.

Q12. What is indentation? What's the use of indentaion in Python?
Ans:-Indentation refers to the spaces at the beginning of a code line. Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. Python uses indentation to indicate a block of code.

Q13. How can we throw some output in Python?
Ans:-Python provides the print() function to display output to the standard output devices. 
Ex:-print("CSK")

Q14. What are operators in Python?
Ans:-The operator can be defined as a symbol which is responsible for a particular operation between two operands. Operators are the pillars of a program on which the logic is built in a specific programming language. Python provides a variety of operators, which are described as follows.

Arithmetic operators
Comparison operators
Assignment Operators
Logical Operators
Bitwise Operators
Membership Operators
Identity Operators

Q15. What is difference between / and // operators?
Ans:- '/' is the division operator.(It gives O/P in Float)
 '//' is the floor division operator(It gives O/p in Int)
 Ex:-
 a = 19
b = 4
print(a // b)  #This prints output as 4
print(a / b)  #This prints output as 4.75

Q16. Write a code that gives following as an output.
name = 'ineuron'
print(ineuron*4)

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
Ans:-
# Python program to check if the input number is odd or even.
# A number is even if division by 2 gives a remainder of 0.
# If the remainder is 1, it is an odd number.

num = int(input("Enter a Number:")) 
if num % 2 == 0: 
  print("Given number is Even") 
else: 
  print("Given number is Odd")
  
Q18. What are boolean operator?         
Ans:-The logical operators and, or and not are also referred to as boolean operators. While and as well as or operator needs two operands, which may evaluate to true or false, not operator needs one operand evaluating to true or false.

Q19. What will the output of the following?
Ans:-
1)1
2)0
3)False
$)1

Q20. What are conditional statements in Python?
Ans:-The if statement is a conditional statement in python, that is used to determine whether a block of code will be executed or not. Meaning if the program finds the condition defined in the if statement to be true, it will go ahead and execute the code block inside the if statement
Ex:- If, else, else if, nested if.

Q21. What is use of 'if', 'elif' and 'else' keywords?
Ans:-
If:-if condition
The if condition is considered the simplest of the three and makes a decision based on whether the condition is true or not. If the condition is true, it prints out the indented expression. If the condition is false, it skips printing the indented expression.

elif:-The elif statement allows you to check multiple expressions for TRUE and execute a block of code as soon as one of the conditions evaluates to TRUE.

Similar to the else, the elif statement is optional. However, unlike else, for which there can be at most one statement, there can be an arbitrary number of elif statements following an if.

else:-The else statement is an optional statement and there could be at most only one else statement following if.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
Code:-
age = int(input("Enter Age: "))
if age>=18:
  print("I can Vote")
else:
  print("I can't vote")
  

Q23. Write a code that displays the sum of all the even numbers from the given list.

numbers = [12, 75, 150, 180, 145, 525, 50]
Ans:-
list1 =[12,75,150,180,145,525,50]
sum=0
for num in list1:
	if(num%2==0):
	  sum +=num
print("Sum of even numbers: " sum)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
Ans:-
num1=int(input("Enter First Number: " ))
num2=int(input("Enter Second Number: "))
num3=int(input("Enter Third Number: "))
if num1 >= num2 and num1 >= num3:
  print(num1)
elif num2 >= num1 and num2 >= num3:
  print(num2)
else:
  print(num3)
  
Q25. Write a program to display only those numbers from a list that satisfy the following conditions
- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
	
Ans:-
a = [12, 75, 150, 180, 145, 525, 50]
b = []
for i in a:
    if i > 150:
        if i > 500:
            break
        continue
    if i % 5 == 0:
        b.append(i)
        
print(b)

Q26. What is a string? How can we declare string in Python?
Ans:-Python string is the collection of the characters surrounded by single quotes, double quotes, or triple quotes. 
Declaring String in python.
Ex:- str = 'Sunil'

Q27. How can we access the string using its index?
Ans:-Like other languages, the indexing of the Python strings starts from 0. For Example, Consider str = 'Sunil'
str[0]='S'
str[1]='u'
str[2]='n'
str[3]='i'
str[4]='l'

Q28. Write a code to get the desired output of the following
string = "Big Data iNeuron"
desired_output = "iNeuron"
Ans:- string = "Big Data iNeuron"
print(string[9:])

Q29. Write a code to get the desired output of the following
string = "Big Data iNeuron"
desired_output = "norueNi"
Ans:-
string = "Big Data iNeuron"
print(string[:-8:-1])

Q30. Resverse the string given in the above question.
Ans:-
string = "Big Data iNeuron"
print(string[::-1])

Q31. How can you delete entire string at once?
Ans:-As we know that strings are immutable. We cannot delete or remove the characters from the string.  But we can delete the entire string using the del keyword.
string = "Big Data iNeuron"
del string
print(string)
O/P:-NameError: name 'string' is not defined

Q32. What is escape sequence?
Ans:-Let's suppose we need to write the text as - They said, "Hello what's going on?"- the given statement can be written in single quotes or double quotes but it will raise the SyntaxError as it contains both single and double-quotes.
The backslash(/) symbol denotes the escape sequence. The backslash can be followed by a special character and it interpreted differently.
Ex:-print("They said, \"What's going on?\"")  

Q33. How can you print the below string?
'iNeuron's Big Data Course'
Ans:-
print('iNeuron\'s Big data Course')
       OR
print("iNeuron's Big data Course")

Q34. What is a list in Python?
Ans:-
*Lists are used to store multiple items in a single variable.
*Lists can any variable type. They are mutable.
*Lists are created using square brackets[].
Ex:-L1 = ["Sunil", 102, "India"]  

Q35. How can you create a list in Python? 
Ans:-Lists are created using square brackets[].
Ex:-L1 = ["Sunil", 102, "India"]  

Q36. How can we access the elements in a list?
Ans:-The indexing is processed in the same way as it happens with the strings. The elements of the list can be accessed by using the slice operator [].
Ex:- L1=[1,'A',2]
L1[0]=1
l1[1]='A'
L1[2]=2

Q37. Write a code to access the word "iNeuron" from the given list.
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
Ans:-
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
print(lst[4][2])

Q38. Take a list as an input from the user and find the length of the list.
Ans:-
# creating an empty list
lst = []

# number of elements as input
n = int(input("Enter number of elements : "))

# iterating till the range
for i in range(0, n):
	L = int(input())

	lst.append(L) # adding the element
	
print(lst)
print(len(lst))

Q39. Add the word "Big" in the 3rd index of the given list.
lst = ["Welcome", "to", "Data", "course"]
Ans:-lst = ["Welcome", "to", "Data", "course"]
lst.insert(2,"Big")
print(lst)

Q40. What is a tuple? How is it different from list?
Ans:-
Tuple:-Tuples are used to store multiple items in a single variable.
*Tuples are Immutable
*Tuples are created using Parantheses ().
Tuples and lists are similar as they both are sequences. Though, tuples and lists are different because we cannot modify tuples, although we can modify lists after creating them, and also because we use parentheses to create tuples while we use square brackets to create lists.

Q41. How can you create a tuple in Python?
Ans:-
All the objects (elements) must be enclosed in parenthesis (), each separated by a comma, to form a tuple. Although using parenthesis is not required, it is recommended to do so.
Ex:- tup = (i,2,3)
tup1=(2,)

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.
Ans:-Once a tuple is created, you cannot change its values. Tuples are unchangeable or immutable as it also is called.
But there is a workaround. You can convert the tuple into a list, change the list, and convert the list back into a tuple.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
Ans:-You are allowed to add tuples to tuples, so if you want to add one item, (or many), create a new tuple with the item(s), and add it to the existing tuple.
Ex:-
X = ("apple", "banana", "cherry")
y = ("orange",)
X += y

print(X)

Q44. Take a tuple as an input and print the count of elements in it.
Ans:-
tuple_ = ("Python", "Tuple", "Ordered", "Immutable")  
count =0  
# Iterating over tuple elements using a for loop  
for item in tuple_:  
    count = count+1
    print(item)  
print(count)
    
Q45. What are sets in Python?
Ans:-
*Sets are used to store multiple items in a single variable.
*A set is a collection which is unordered, unchangeable*, and unindexed.
*Sets are written with curly brackets{}.

Q46. How can you create a set?
Ans:-
The set can be created by enclosing the comma-separated immutable items with the curly braces {}. Python also provides the set() method, which can be used to create the set by the passed sequence.
Example:-
s={1,2,3,4,5}
print(s)
O/P:-5,2,3,1,4(They are unordered)

Q47. Create a set and add "iNeuron" in your set.
Ans:-Once a set is created, you cannot change its items, but you can add new items.
Code:-
---------
s=set()
s.add("iNeuron")
print(s)

Q48. Try to add multiple values using add() function.
Ans:-
thisset = {"apple", "banana", "cherry"}
tropical = {"pineapple", "mango", "papaya"}

thisset.update(tropical)

print(thisset)
O/p:-{'apple', 'mango', 'cherry', 'pineapple', 'banana', 'papaya'}

Q49. How is update() different from add()?
Ans:-Python provides the add() method and update() method which can be used to add some particular item to the set. The add() method is used to add a single element whereas the update() method is used to add multiple elements to the set. 

Q50. What is clear() in sets?
Ans:-Python provides the clear() method to remove all the items from the set.

Q51. What is frozen set?
Ans:-
The frozen sets are the immutable form of the normal sets, i.e., the items of the frozen set cannot be changed and therefore it can be used as a key in the dictionary.

The frozenset() method is used to create the frozenset object. The iterable sequence is passed into this method which is converted into the frozen set as a return type of the method.

Q52. How is frozen set different from set?
Ans:-

The elements of the frozen set cannot be changed after the creation. We cannot change or append the content of the frozen sets by using the methods like add() or remove(). Whereas,in sets we can use the methods like add() or remove() after creation of the set.

Q53. What is union() in sets? Explain via code.
Ans:-The union() method returns a set that contains all items from the original set, and all items from the specified set(s).
code:-
x = {"a", "b", "c"}
y = {"f", "d", "a"}
z = {"c", "d", "e"}

result = x.union(y, z)

print(result)
O/P:-{'d', 'b', 'e', 'c', 'a', 'f'}

Q54. What is intersection() in sets? Explain via code.
Ans:-The intersection() method returns a set that contains the similarity between two or more sets.
code:-
x = {"a", "b", "c"}
y = {"c", "d", "e"}
z = {"f", "g", "c"}

result = x.intersection(y, z)

print(result)
O/P:-{'c'}

Q55. What is dictionary in Python?
Ans:-Dictionaries are used to store data values in key:value pairs.
A dictionary is a collection which is ordered,changeable and do not allow duplicates.

Q56. How is dictionary different from all other data structures.
Ans:-Dictionaries are always exists in Key and value pairs, and the keys are unique. Whereas others don't have that type of syntax.

Q57. How can we delare a dictionary in Python?
Ans:-
Dictionaries are written with curly brackets, and have keys and values
Ex:-Dict = {"Name": "Tom", "Age": 22}   

Q58. What will the output of the following?
var = {}
print(type(var))
Ans:- <class 'dict'>

Q59. How can we add an element in a dictionary?
Ans:-Adding an item to the dictionary is done by using a new index key and assigning a value to it.
thisdict = {"brand": "Ford", "model": "Mustang","year": 1964}
thisdict["color"] = "red"
print(thisdict)
O/P:-{'brand': 'Ford', 'model': 'Mustang', 'year': 1964, 'color': 'red'}

Q60. Create a dictionary and access all the values in that dictionary.
Ans:- The values can be accessed in the dictionary by using the keys as keys are unique in the dictionary.
Ex:-thisdict = {"brand": "Ford", "model": "Mustang","year": 1964}
x=thisdict["model"]
O/P:-"Mustang".

Q61. Create a nested dictionary and access all the element in the inner dictionary.
Ans:-
myfamily = { "child1" : { "name" : "Emil", "year" : 2004},"child2" : {"name" : "Tobias", "year" : 2007}, "child3" :{"name" : "Linus", "year" : 2011}}
print(myfamily["child1"]["name"])  #Accessing the elements in the directory
print(myfamily["child2"]["name"])

Q62. What is the use of get() function?
Ans:-
The get() method returns the value of the item with the specified key.
Ex:-car = {"brand": "Ford","model": "Mustang","year": 1964}
x = car.get("model")
print(x) 
O/P:- Mustang

Q63. What is the use of items() function?
Ans:-items():-The items() method returns a view object. The view object contains the key-value pairs of the dictionary, as tuples in a list.
car = {"brand": "Ford","model": "Mustang","year": 1964}
x = car.items()
car["year"] = 2018
print(x)
O/P:-dict_items([('brand', 'Ford'), ('model', 'Mustang'), ('year', 2018)])

Q64. What is the use of pop() function?
Ans:-pop():-Removes the element with the specified key.
car = {"brand": "Ford","model": "Mustang","year": 1964}
car.pop("model")
print(car)
O/p:-{'brand': 'Ford', 'year': 1964}

Q65. What is the use of popitems() function?
Ans:-
popitem():-Removes the last inserted key-value pair
Ex:-
car = {"brand": "Ford","model": "Mustang","year": 1964}
car.popitem()
print(car)
O/P:-{'brand': 'Ford', 'model': 'Mustang'}

Q66. What is the use of keys() function?
Ans:-
Keys():-Returns a list containing the dictionary's keys
Ex:-
car = {"brand": "Ford","model": "Mustang","year": 1964}
x = car.keys()
print(x)
O/P:-dict_keys(['brand', 'model', 'year'])

Q67. What is the use of values() function?
Ans:-
values():-Returns a list of all the values in the dictionary
Ex:-
car = {"brand": "Ford","model": "Mustang","year": 1964}
x= car.values()
print(y)
O/P:-dict_values(['Ford', 'Mustang', 1964])

Q68. What are loops in Python?
Ans:-Looping means repeating something over and over until a particular condition is satisfied. There are three loops in python.
1)For loop
2)While Loop
3)Nested Loops

Q69. How many type of loop are there in Python?
Ans:-
There are three loops in python.
1)For loop:-This type of loop executes a code block multiple times and abbreviates the code that manages the loop variable. Generally we use for loop if we no no.of times we have to iterate.
2)While Loop:-	Repeats a statement or group of statements while a given condition is TRUE. It tests the condition before executing the loop body.
3)Nested Loops:-We can iterate a loop inside another loop. It may be while loop or For loop.

Q70. What is the difference between for and while loops?
Ans:- The major difference between for loop and the while loop is that for loop is used when the number of iterations is known, whereas execution is done in the while loop until the statement in the program is proved wrong.

Q71. What is the use of continue statement?
Ans:-With the continue statement we can stop the current iteration, and continue with the next.

Q72. What is the use of break statement?
Ans:-With the break statement we can stop the loop.Suppose you want to terminate a loop and skip to the next code after the loop; break will help you do that.

Q73. What is the use of pass statement?
Ans:-The pass statement is used when a statement is syntactically necessary, but no code is to be executed.

Q74. What is the use of range() function?
Ans:-With the help of the range() function, we may produce a series of numbers. range(10) will produce values between 0 and 9.
We can give specific start, stop, and step size values in the manner range(start, stop, step size). If the step size is not specified, it defaults to 1.

Q75. How can you loop over a dictionary?
Ans:-You can loop through a dictionary by using a for loop.
When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.
Ex:-
car = {"brand": "Ford","model": "Mustang","year": 1964}
for x in thisdict:
  print(x)
O/P:-
brand
model
year

Q76. Write a Python program to find the factorial of a given number.
Ans:-
n=int(input("Enter a number:"))
fact=1
if n<0:
    print("Factorial of given number is not available.")
elif n==0:
    print("Factorial of 0 is 1")
else:
    for i in range(1,n+1):
        fact=fact*i
    print("The factorial of",n,"is:", fact)

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100
Ans:-
P=int(input("Enter The Principal Amount : "))
T=float(input("Enter the time period : "))
R=float(input("Enter rate if interest : "))
SI=(P*T*R)/100
print('The Simple Interest is', SI)
O/P:-
Enter The Principal Amount : 8
Enter the time period : 6
Enter rate if interest : 8
The Simple Interest is 3.84

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
Ans:-
P=int(input("Enter The Principal Amount : "))
T=float(input("Enter the time period : "))
R=float(input("Enter rate if interest : "))
A=P*(1 + (R/100))**T
print('The Compound Interest is', A)

Using Functions:-
--------
def compound_rate(P, R, t):  
    TotalAmount = P * (pow ((1 + R / 100), t))  
    CInterest = TotalAmount - P    
    print("Total return value after completion of given time period: ", TotalAmount)  
    print("Compound interest gained on given amount is", CInterest)  
  
# Taking principal amount value from the user  
P = float(input("Enter the principal amount: "))  
R = float(input("Enter the rate for compound interest: ")) # taking interest rate value  
t = float(input("Enter the time period for which principal is invested: ")) # taking time period value  
compound_rate(P, R, t)  #calling the function

Q79. Write a Python program to check if a number is prime or not.
Ans:-
def Check_Prime(n):
    if n>1:
        for i in range(2, int(n/2)+1):
            if(n%i)==0:
                print(n, "is not a prime number")
                break
        else:
            print(n, "is a prime number")
    else:
        print(n, "is not a prime number")
n=int(input("Enter a number : "))
Check_Prime(n)
        
Q80. Write a Python program to check Armstrong Number.
Ans:-
num = int(input("Enter a number : "))
order = len(str(num))
sum = 0
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** order
   temp //= 10
if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")

Q81. Write a Python program to find the n-th Fibonacci Number.
Ans:-
def Fibonacci(n):
    if n<= 0:
        print("Incorrect input")
    elif n == 1:
        return 0
    elif n == 2:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)
n= int(input("Enter a number : "))
print(Fibonacci(n))

Q82. Write a Python program to interchange the first and last element in a list.
Ans:-

def swapList(newList):
    size = len(newList)
    temp = newList[0]
    newList[0] = newList[size - 1]
    newList[size - 1] = temp
    return newList
newList = [12, 35, 9, 56, 24]
print(swapList(newList))
 
Q83. Write a Python program to swap two elements in a list.
Ans:-
def swapPositions(list, pos1, pos2):
     
    list[pos1], list[pos2] = list[pos2], list[pos1]
    return list
 
List = [23, 65, 19, 90]
pos1=int(input("Enter the First Index to be swapped :" ))
pos2=int(input("Enter the Second Index to be swapped :" )) 
print(swapPositions(List, pos1-1, pos2-1))

Q84. Write a Python program to find N largest element from a list.
Ans:-
def N_max_elements(list, N):
    list.sort()     
    return list[-N: ]
l=[]
n=int(input("Enter size of list "))
for i in range(0,n):
    e=int(input("Enter element of list "))
    l.append(e)
n=int(input("Enter N"))
print(n, "max elements in ",l)
print(N_max_elements(l, n))

Q85. Write a Python program to find cumulative sum of a list.
Ans:-
i = []  
n = int(input("enter the no of elements in list:"))  
for x in range(0,n):  
    element=int(input("enter the element" + str(x+1) + ":"))  
    i.append(element)  
j=[sum(i[0:x+1]) for x in range(0,len(i))]  
print("Original list is: ",i)  
print("Cumulative sum list is: ",j)  
O/P:-
Original list is:  [5, 10, 15, 20, 25]
Cumulative sum list is:  [5, 15, 30, 50, 75]
â€‹
Q86. Write a Python program to check if a string is palindrome or not.
Ans:-string=input(("Enter a letter:"))  
if(string==string[::-1]):  
      print("The letter is a palindrome")  
else:  
      print("The letter is not a palindrome")  
O/P:-
Enter a letter:ATTA
The letter is a palindrome

Q87. Write a Python program to remove i'th element from a string.
Ans:-
def remove_char(s, i):
    a = s[ : i]
    b = s[i + 1: ]
    return a+b
string = input(("Enter a string : ")) 
i = int(input("Enter a index to be removed  : "))
print(remove_char(string,i-1))
O/P:-
Enter a string : iNeuron
Enter a index to be removed  : 5
iNeuon

Q88. Write a Python program to check if a substring is present in a given string.
Ans:-
string = input("Enter a string : ")
sub_str = input("Enter a sub_string to be searched : ")

if sub_str in string:
    print("Yes! it is present in the string")
else:
    print("No! it is not present")

Q89. Write a Python program to find words which are greater than given length k.
Ans:-
def string_k(k, str):
    string = []
    text = str.split(" ")
    for x in text:
        if len(x) > k:

            string.append(x)
    return string
k = int(input("Enter the length : "))
str = input("Enter a string : ")
print(string_k(k, str))
O/P:-
Enter the length : 3
Enter a string : Welcome to Big Data Course
['Welcome', 'Data', 'Course']

Q90. Write a Python program to extract unquire dictionary values.
Ans:-
dict1 = {'A' : [1, 3, 5, 4],
             'B' : [4, 6, 8, 10],
             'C' : [6, 12, 4 ,8],
             'D' : [5, 7, 2]}

print("The original dictionary is : " ,dict1)
res = list(sorted({ele for val in dict1.values() for ele in val}))
print("The unique values list is : " , res) 
O/P:-
The original dictionary is :  {'A': [1, 3, 5, 4], 'B': [4, 6, 8, 10], 'C': [6, 12, 4, 8], 'D': [5, 7, 2]}
The unique values list is :  [1, 2, 3, 4, 5, 6, 7, 8, 10, 12]

Q91. Write a Python program to merge two dictionary.
Ans:-
def Merge(dict1, dict2):
    return(dict2.update(dict1))
dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
print(Merge(dict1, dict2))
print(dict2)
O/P:-
None
{'d': 6, 'c': 4, 'a': 10, 'b': 8}

Q92. Write a Python program to convert a list of tuples into dictionary.
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
Ans:-
def Convert(tup, di):
    di = dict(tup)
    return di
tups = [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
dictionary = {}
print (Convert(tups, dictionary))
O/P:-Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
Ans:-
Ans:-
l = []  
n = int(input("enter the no of elements in list:"))  
for x in range(0,n):  
    element=int(input("enter the element" + str(x+1) + ":"))  
    l.append(element) 

res = [(val, pow(val, 3)) for val in l]
print(res)

Q94. Write a Python program to get all combinations of 2 tuples.
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
Ans:-

test_tuple1 = (7, 2)
test_tuple2 = (7, 8)
print("The original tuple 1 : " + str(test_tuple1))
print("The original tuple 2 : " + str(test_tuple2))
res =  [(a, b) for a in test_tuple1 for b in test_tuple2]
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1]
print("The filtered tuple : " + str(res))
O/P:-
The original tuple 1 : (7, 2)
The original tuple 2 : (7, 8)
The filtered tuple : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]

Q95. Write a Python program to sort a list of tuples by second item.
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
Ans:-
def Sort_Tuple(tup):
    lst = len(tup)
    for i in range(0, lst):
        for j in range(0, lst-i-1):
            if (tup[j][1] > tup[j + 1][1]):
                temp = tup[j]
                tup[j]= tup[j + 1]
                tup[j + 1]= temp
    return tup
tup = [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
print(Sort_Tuple(tup))

Q96. Write a python program to print below pattern.
* 
* * 
* * * 
* * * * 
* * * * * 
Ans:-
n=int(input("Enter no.of rows : "))
for i in range(0, n):
        for j in range(0, i+1):
            print("* ",end="")
        print("\r")
 
 Q97. Write a python program to print below pattern.
    *
   **
  ***
 ****
*****
Ans:-
n=int(input("Enter no.of rows : "))
i=0
while(i<=n):
  print(" " * (n - i) +"*" * i)
  i+=1
  
Q98. Write a python program to print below pattern.
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
Ans:-
def triangle(n):
    k = n - 1
    for i in range(0, n):
        for j in range(0, k):
            print(end=" ")
        k = k - 1
        for j in range(0, i+1):
            print("* ", end="")
        print("\r")
n=int(input("Enter no.of rows : "))
triangle(n)

Q99. Write a python program to print below pattern.
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
Ans:-

def numpat(n):
    num = 1
    for i in range(0, n):
        num = 1
        for j in range(0, i+1):
            print(num, end=" ")
            num = num + 1
        print("\r")
n=int(input("Enter no.of rows : "))
numpat(n)

Q100. Write a python program to print below pattern.
A 
B B 
C C C 
D D D D 
E E E E E 
Ans:-
def alphapat(n):
    num = 65
    for i in range(0, n):
        for j in range(0, i+1):
            ch = chr(num)
            print(ch, end=" ")
        num = num + 1
        print("\r")

n=int(input("Enter no.of rows : "))
alphapat(n)
